---
import Layout from "@lay/Layout.astro";
import Header from "@comp/Header.astro";
import Footer from "@comp/Footer.astro";
import FormElement from "@comp/FormElement.astro";
import BackBtn from "@comp/BackBtn.astro";
import prisma from "@db/index.js";

const { id } = Astro.params;

if (!Number(id)) {
    console.log("Id no válido");
    return Astro.redirect("/404");
}

const alumno = await prisma.alumno.findUnique({
    where: {
        id_alumno: Number(id),
    },
    include: {
        inscripciones: {
            include: {
                grupo: {
                    include: {
                        instituto: true,
                    },
                },
                curso: true,
            },
        },
    },
});

if (!alumno) {
    console.log("No hay registro con ese valor");
    return Astro.redirect("/404");
}

if (!alumno.activo) {
    return Astro.redirect(`/alumno/${alumno.id_alumno}`);
}

const grupos = await prisma.grupo.findMany({
    include: {
        instituto: true,
    },
});

const cursos = await prisma.curso.findMany();

/* id_alumno, nombre*, apellidos, telefono, direccion, fecha_nacimiento, email*, nif, nia, nuss, comentarios, activo*, fecha_creacion*, fecha_actualizacion */
---

<Layout title="Modificación del alumno" kind={1}>
    <Header />
    <main class="flex justify-center items-center grid-flow-col gap-10">
        <form
            class="bg-gray-300 rounded-lg shadow-md w-fit py-10 px-8 flex flex-col"
            id={alumno.id_alumno.toString()}
        >
            <fieldset class="grid grid-cols-2 grid-rows gap-2 py-5 px-4">
                <legend
                    class="px-1.5 bg-[#476683] rounded-md text-white text-center text-2xl font-semibold"
                >
                    Modificación de un alumno
                </legend>
                <FormElement
                    texto="nombre"
                    placehold={alumno.nombre as string}
                    value={alumno.nombre as string}
                    isrequired={true}
                />
                <FormElement
                    texto="apellidos"
                    placehold={alumno.apellidos as string}
                    value={alumno.apellidos as string}
                />
                <FormElement
                    texto="telefono"
                    placehold={alumno.telefono as string}
                    value={alumno.telefono as string}
                />
                <FormElement
                    texto="fecha_nacimiento"
                    type="date"
                    placehold={alumno.fecha_nacimiento?.toString()}
                    value={alumno.fecha_nacimiento?.toString()}
                />
                <FormElement
                    texto="email"
                    type="email"
                    placehold={alumno.email as string}
                    value={alumno.email as string}
                />
                <FormElement
                    texto="nif"
                    placehold={alumno.nif as string}
                    value={alumno.nif as string}
                />
                <FormElement
                    texto="nia"
                    placehold={alumno.nia as string}
                    value={alumno.nia as string}
                />
                <FormElement
                    texto="nuss"
                    placehold={alumno.nuss as string}
                    value={alumno.nuss as string}
                />
                <FormElement
                    classes="col-span-2 w-full"
                    texto="comentarios"
                    placehold="..."
                    value={alumno.comentarios as string}
                    type="textarea"
                />
                { alumno.inscripciones[0] && (
                <div
                    class="flex flex-col p-2 gap-1.5 bg-gray-400 rounded-lg shadow-md drop-shadow-md"
                >
                    <label for="id_grupo"
                        >Grupo <span class="text-red-600 font-bold">*</span
                        ></label
                    >
                    <input
                        class="bg-gray-700 border border-gray-400 text-white text-sm rounded-lg p-1.5 disabled:cursor-not-allowed disabled:bg-gray-800"
                        type="text"
                        id="id_grupo"
                        list="grupos"
                        value=`${alumno.inscripciones[0].grupo.nombre} (${alumno.inscripciones[0].grupo.id_grupo})`
                    />
                </div>

                <div
                    class="flex flex-col p-2 gap-1.5 bg-gray-400 rounded-lg shadow-md drop-shadow-md"
                >
                    <label for="id_curso"
                        >Curso <span class="text-red-600 font-bold">*</span
                        ></label
                    >
                    <input
                        class="bg-gray-700 border border-gray-400 text-white text-sm rounded-lg p-1.5 disabled:cursor-not-allowed disabled:bg-gray-800"
                        type="text"
                        id="id_curso"
                        list="cursos"
                        value=`${alumno.inscripciones[0].curso?.anio_academico} (${alumno.inscripciones[0].curso.id_curso})`
                    />
                </div>
                <div
                    class="flex flex-col p-2 gap-1.5 bg-gray-400 rounded-lg shadow-md drop-shadow-md"
                >
                    <label for="id_instituto"
                        >Instituto <span class="text-red-600 font-bold">*</span
                        ></label
                    >
                    <input
                        value=`${alumno.inscripciones[0].grupo.instituto.nombre} (${alumno.inscripciones[0].grupo.instituto.id_instituto})`
                        class="bg-gray-700 border border-gray-400 text-white text-sm rounded-lg p-1.5 disabled:cursor-not-allowed disabled:bg-gray-800"
                        type="text"
                        id="id_instituto"
                        disabled
                        title="No se puede cambiar el instituto desde aqui."
                    />
                </div>
                <input
                class="hidden"
                type="text"
                name="id_inscripcion"
                value={alumno.inscripciones[0].id_inscripcion}
                readonly
            />
                )}

                <datalist id="grupos">
                    {
                        grupos.map(({ nombre, id_grupo }) => (
                            <option value={`${nombre} (${id_grupo})`} />
                        ))
                    }
                </datalist>
                <datalist id="cursos">
                    {
                        cursos.map(({ anio_academico, id_curso }) => (
                            <option value={`${anio_academico} (${id_curso})`} />
                        ))
                    }
                </datalist>
                <hr class="border-black border-solid col-span-2" />
                <div>
                    <h2 class="text-xl font-semibold mb-2">
                        Fecha de Creación
                    </h2>
                    <p class="text-gray-700">
                        {
                            alumno.fecha_creacion
                                .toLocaleString("es-ES")
                                .replace(",", "")
                        }
                    </p>
                </div>
                <div>
                    <h2 class="text-xl font-semibold mb-2">
                        Fecha de Actualización
                    </h2>
                    <p class="text-gray-700">
                        {
                            alumno.fecha_actualizacion
                                ?.toLocaleString("es-ES")
                                .replace(",", "")
                        }
                    </p>
                </div>
            </fieldset>
            <div class="text-center">
                <button
                    type="submit"
                    id="btnsubmit"
                    class="bg-blue-700 hover:bg-blue-800 text-white rounded-lg text-sm px-2 py-2 transition-colors mx-auto"
                    >Modificar alumno</button
                >
                <BackBtn title="Los cambios no se guardaran" />
            </div>
            
        </form>
    </main>
    <Footer />
</Layout>

<script is:inline type="module">
    import { apiurl, data } from "/utils.js";
    const form = document.querySelector("form");

    form.addEventListener("submit", async (e) => {
        // Peticion para modificar el alumno
        // Posibilidad de verificar si ha habido algun cambio
        e.preventDefault();

        data.id_alumno = parseInt(form.id);
        data.nombre = form.nombre.value;
        data.apellidos = form.apellidos.value;
        data.telefono = form.telefono.value;
        data.fecha_nacimiento = form.fecha_nacimiento.value;
        data.email = form.email.value;
        data.nif = form.nif.value;
        data.nia = form.nia.value;
        data.nuss = form.nuss.value;
        data.comentarios = form.comentarios.value;
        data.id_grupo = parseInt(form.id_grupo.value.match(/\(([^)]+)\)/)[1]);
        data.id_curso = parseInt(form.id_curso.value.match(/\(([^)]+)\)/)[1]);
        data.id_inscripcion = parseInt(form.id_inscripcion.value);

        Object.keys(data).forEach((key) => {
            if (data[key] == "") data[key] = null;
        });

        const response = await fetch(apiurl + "/alumno", {
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
        });

        const json = await response.json();
        alert(json.message);
        if (response.ok) {
            window.location.reload();
        }
    });
</script>
