---
import Layout from "@lay/Layout.astro";
import Header from "@comp/Header.astro";
import Footer from "@comp/Footer.astro";
import BackBtn from "@comp/BackBtn.astro";
import ExportElement from "@comp/ExportElement.astro";
import { Prisma } from "@prisma/client";

const atributosAlumno = Object.values(Prisma.AlumnoScalarFieldEnum);
---

<Layout title="Exportar alumnos">
    <Header />
    <div class="flex justify-between w-full px-5 py-2 h-fit">
        <div class="flex items-center gap-x-5">
            <BackBtn url="/alumno" />
            <h2 class="text-3xl">Exportar datos de alumnos</h2>
        </div>
    </div>
    <main class="flex justify-center items-center gap-5 p-4">
        <form
            class="bg-gray-300 p-4 rounded w-fit h-fit px-8 py-6 shadow-md"
            id="export-all"
        >
            <fieldset class="grid grid-cols-2 gap-x-4 gap-y-2 text-center">
                <legend
                    class="px-1.5 mb-5 bg-[#476683] rounded-md text-white text-center text-2xl font-semibold"
                    >Seleccione datos de los alumnos
                </legend>
                {
                    atributosAlumno
                        .filter((atributo) => atributo !== "id_alumno")
                        .map((atributo) => (
                            <ExportElement
                                texto={atributo}
                                disabled={atributo === "nombre"}
                                classes={
                                    atributo === "nombre" ? "col-span-2" : ""
                                }
                                title={
                                    atributo === "nombre"
                                        ? "Se tiene que exportar al menos el nombre"
                                        : ""
                                }
                            />
                        ))
                }
            </fieldset>
            <div class="col-span-3 text-center">
                <hr class="border-black border-solid my-3" />
                <button
                    type="submit"
                    class="mx-auto bg-blue-700 hover:bg-blue-800 text-white rounded-lg text-sm px-2 py-2 transition-colors"
                    >Exportar todos los alumnos</button
                >
            </div>
        </form>
        <form
            class="bg-gray-300 p-4 rounded w-fit h-fit px-8 py-6 shadow-md"
            id="export-without"
        >
            <fieldset class="grid grid-cols-2 gap-x-4 gap-y-2 text-center">
                <legend
                    class="px-1.5 bg-[#476683] rounded-md text-white text-center text-2xl font-semibold"
                    >Exportar alumnos sin pr√°cticas
                </legend>
            </fieldset>
            <div class="col-span-3 text-center">
                <hr class="border-black border-solid my-3" />
                <button
                    type="submit"
                    class="mx-auto bg-blue-700 hover:bg-blue-800 text-white rounded-lg text-sm px-2 py-2 transition-colors"
                    >Exportar datos</button
                >
            </div>
        </form>
    </main>
</Layout>
<Footer />

<script is:inline type="module">
    import { apiurl, data } from "/utils.js";
    const form = document.querySelector("form#export-all");

    async function sendData(e) {
        e.preventDefault();

        const checkboxes = document.querySelectorAll('input[type="checkbox"]');

        checkboxes.forEach((checkbox) => {
            data[checkbox.id] = checkbox.checked;
        });

        data.nombre = true;

        try {
            const resp = await fetch(apiurl + "/alumno/export", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                },
                body: JSON.stringify(data),
            });

            if (resp.ok) {
                const blob = await resp.blob();
                const url = window.URL.createObjectURL(blob);
                const a = document.createElement("a");
                a.href = url;
                a.download = "alumnos.csv";
                document.body.appendChild(a);
                a.click();
                a.remove();
                window.URL.revokeObjectURL(url);
            } else {
                alert((await resp.json()).message);
                throw new Error("Network response was not ok");
            }
        } catch (error) {
            console.error("Error downloading file:", error);
            alert("Error al descargar el archivo");
        }
    }

    form.addEventListener("submit", sendData);
</script>
