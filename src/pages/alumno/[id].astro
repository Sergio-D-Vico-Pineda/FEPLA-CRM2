---
import Layout from "@lay/Layout.astro";
import Header from "@comp/Header.astro";
import Footer from "@comp/Footer.astro";
import BackBtn from "@comp/BackBtn.astro";
import Popup from "@comp/Popup.astro";
import prisma from "@db/index.js";

const { id } = Astro.params;

if (!Number(id)) {
    console.log("Id no válido")
    return Astro.redirect("/404");
}

const alumno = await prisma.alumno.findUnique({
    where: {
        id_alumno: Number(id),
    },
})


if (!alumno) {
    console.log("No hay registro con ese valor");
    return Astro.redirect("/404");
}

/* id_alumno, nombre*, apellidos, telefono, direccion, fecha_nacimiento, email*, nif, nia, nuss, comentarios, activo*, fecha_creacion*, fecha_actualizacion */
---

<Layout title="Información de la alumno" kind={1}>
    <Header />
    <main class="flex justify-center items-center grid-flow-col gap-10">
        { alumno &&
        <div
            class="grid grid-cols-2 gap-x-2 gap-y-2.5 py-10 px-8 bg-gray-300 rounded-lg shadow-md w-fit"
        >
            <div class="col-span-2 text-center">
                {
                    alumno.activo ? (
                        <h2 class="text-2xl font-semibold mb-2 text-green-500">
                            Información
                        </h2>
                    ) : (
                        <h2 class="text-2xl font-semibold mb-2 text-red-500">
                            Información
                        </h2>
                    )
                }
            </div>
            <div>
                <h2 class="text-xl font-semibold mb-2">Nombre</h2>
                <p class="text-gray-700">{alumno.nombre}</p>
            </div>
            <div>
                <h2 class="text-xl font-semibold mb-2">Apellidos</h2>
                <p class="text-gray-700">{alumno.apellidos}</p>
            </div>
            <div>
                <h2 class="text-xl font-semibold mb-2">Teléfono</h2>
                <p class="text-gray-700">{alumno.telefono}</p>
            </div>
            <div>
                <h2 class="text-xl font-semibold mb-2">Fecha de nacimiento</h2>
                {
                    alumno.fecha_nacimiento === null ? (
                        <p class="text-gray-700 italic">Sin fecha de nacimiento</p>
                    ) : (
                        <p class="text-gray-700">{new Date(alumno.fecha_nacimiento as Date).toLocaleDateString("es-ES")}</p>
                    )
                }
            </div>
            <div>
                <h2 class="text-xl font-semibold mb-2">Email</h2>
                <p class="text-gray-700">{alumno.email}</p>
            </div>
            <div>
                <h2 class="text-xl font-semibold mb-2">NIF</h2>
                <p class="text-gray-700">{alumno.nif}</p>
            </div>
            <div>
                <h2 class="text-xl font-semibold mb-2">NIA</h2>
                <p class="text-gray-700">{alumno.nia}</p>
            </div>
            <div>
                <h2 class="text-xl font-semibold mb-2">NUSS</h2>
                <p class="text-gray-700">{alumno.nif}</p>
            </div>
            {
                alumno.comentarios && (
                    <div class="col-span-2 text-center">
                        <h2 class="text-xl font-semibold mb-2">Comentarios</h2>
                        <p class="text-gray-700">{alumno.comentarios}</p>
                    </div>
                )
            }
            <hr class="col-span-2 border-black" />
            <div>
                <h2 class="text-xl font-semibold mb-2">Fecha de Creación</h2>
                <p class="text-gray-700">{new Date(alumno.fecha_creacion).toLocaleString("es-ES").replace(",", "")}</p>
            </div>
            <div>
                <h2 class="text-xl font-semibold mb-2">
                    Fecha de Actualización
                </h2>
                <p class="text-gray-700">{new Date(alumno.fecha_actualizacion as Date).toLocaleString("es-ES").replace(",", "")}</p>
            </div>
            <div class="flex justify-center space-x-2 col-span-2 mt-6">
                {
                    alumno.activo ? (
                        <a
                            class="opacity-50 bg-blue-500 hover:bg-blue-600 text-white rounded px-3 py-1 transition-colors duration-300 cursor-not-allowed"
                        >
                            Crear practicas (🛠)
                        </a>
                        <a
                            href=`/alumno/editar/${alumno.id_alumno}`
                            class="bg-blue-500 hover:bg-blue-600 text-white rounded px-3 py-1 transition-colors duration-300"
                        >
                            Editar
                        </a>
                        <button
                            id="btnDesactivar"
                            type="button"
                            class="bg-red-500 hover:bg-red-600 text-white rounded px-3 py-1 transition-colors duration-300"
                        >
                            Desactivar
                        </button>
                    ) : (
                    <button
                            id="btnActivar"
                            type="button"
                            class="bg-green-500 hover:bg-green-600 text-white rounded px-3 py-1 transition-colors duration-300"
                        >
                            Activar
                        </button>
                    )
                }
                <BackBtn />
            </div>
            <span id="id_alumno" class="hidden">{alumno.id_alumno}</span>
        </div>
        }
        <Popup
            title="¿Está seguro de desactivar el alumno?"
            url=`/alumno/eliminar/${alumno.id_alumno}`
        />
    </main>
    <Footer />
</Layout>

<script is:inline type="module">
    import { apiurl, data } from "/utils.js";

    let btnDesactivar = document.querySelector("#btnDesactivar");
    let btnActivar = document.querySelector("#btnActivar");
    let popup = document.querySelector("#popup");
    let btnAceptar = document.querySelector("#btnconfirm");
    let id_alu = document.querySelector("#id_alumno");

    if (btnDesactivar) {
        btnDesactivar.addEventListener("click", () => {
            popup.style.display = "grid";
        });
    }

    data.id_alumno = parseInt(id_alu.textContent)

    const cambiarEstado = async (estado) => {
        data.activo = estado;
        const response = await fetch(apiurl + "/alumno", {
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
        });
        alert((await response.json()).message);
        if (response.ok) {
            window.location.reload();
        }
    };

    if (btnDesactivar) {
        btnDesactivar.addEventListener("click", () => {
            popup.style.display = "grid";
        });
        btnAceptar.addEventListener("click", () => {
            popup.style.display = "none";
            cambiarEstado(false);
        });
    }

    if (btnActivar) {
        btnActivar.addEventListener("click", () => {
            cambiarEstado(true);
        });
    }
</script>
