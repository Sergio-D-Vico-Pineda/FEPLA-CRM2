---
import Layout from "@lay/Layout.astro";
import Header from "@comp/Header.astro";
import Footer from "@comp/Footer.astro";
import FormElement from "@comp/FormElement.astro";
import FormElementSelect from "@comp/FormElementSelect.astro";
import BackBtn from "@comp/BackBtn.astro";
import Cursos from "@comp/Cursos.astro";
import Empresas from "@comp/Empresas.astro";
import Alumnos from "@comp/Alumnos.astro";
import TipoPractica from "@comp/TipoPractica.astro";

const now = new Date();
const newdate = new Date(new Date().setMonth(now.getMonth() + 3));

/* id_practica, fecha_inicio, fecha_fin, tipo_practica*, estado*, comentarios, fecha_creacion*, fecha_actualizacion, fk id_alumno, fk id_profesor, fk id_empresa, fk id_curso */
---

<Layout title="Nueva pr치ctica" kind={1}>
    <Header />
    <main class="grid place-content-center">
        <form
            class="bg-gray-300 rounded-lg shadow-md w-fit py-10 px-8 flex flex-col"
            id="formnew"
        >
            <fieldset class="grid grid-cols-2 grid-rows gap-2 py-5 px-4">
                <legend
                    class="px-1.5 bg-[#476683] rounded-md text-white text-center text-2xl font-semibold"
                    >Nueva pr치ctica</legend
                >
                <FormElement
                    texto="fecha_inicio"
                    type="date"
                    value={now.toISOString().slice(0, 10)}
                />
                <FormElement
                    texto="fecha_fin"
                    type="date"
                    value={newdate.toISOString().slice(0, 10)}
                />
                <FormElementSelect isrequired={true} />
                <TipoPractica />
                <FormElement
                    texto="comentarios"
                    placehold="..."
                    type="textarea"
                />

                <Alumnos
                    classes="flex flex-col p-2 gap-1.5 bg-gray-400 rounded-lg shadow-md drop-shadow-md"
                />

                <Cursos
                    classes="flex flex-col p-2 gap-1.5 bg-gray-400 rounded-lg shadow-md drop-shadow-md"
                />

                <Empresas
                    classes="flex flex-col p-2 gap-1.5 bg-gray-400 rounded-lg shadow-md drop-shadow-md"
                />
            </fieldset>
            <div class="text-center">
                <button
                    type="submit"
                    id="btnsubmit"
                    class="mx-auto bg-blue-700 hover:bg-blue-800 text-white rounded-lg text-sm px-2 py-2 transition-colors"
                    >Crear nueva pr치ctica</button
                >
                <BackBtn />
            </div>
        </form>
    </main>
    <Footer />
</Layout>

<script is:inline type="module">
    import { apiurl, data } from "/utils.js";
    const form = document.querySelector("form");
    const alumnos = document.querySelector("#alumnos");
    const cursos = document.querySelector("#cursos");
    const empresas = document.querySelector("#empresas");

    async function sendData(e) {
        e.preventDefault();

        let id_profesor = parseInt(localStorage.getItem("id_profesor"));

        if (!id_profesor) {
            alert("No has iniciado sesi칩n");
            return;
        }

        if (!form.checkValidity()) {
            alert("Faltan campos por rellenar");
            return;
        }

        data.fecha_inicio = form.fecha_inicio.value;
        data.fecha_fin = form.fecha_fin.value;
        data.tipo_practica = form.tipo_practica.value;
        data.estado = form.estado.value;
        data.comentarios = form.comentarios.value;
        data.id_curso = parseInt(
            cursos.querySelector(`option[value="${form.id_curso.value}"]`)
                .textContent,
        );
        data.id_empresa = parseInt(
            empresas.querySelector(`option[value="${form.id_empresa.value}"]`)
                .textContent,
        );
        data.id_alumno = parseInt(
            alumnos.querySelector(`option[value="${form.id_alumno.value}"]`)
                .textContent,
        );
        data.id_profesor = id_profesor;

        Object.keys(data).forEach((key) => {
            if (data[key] == "") data[key] = null;
        });

        console.log(data);
        const response = await fetch(apiurl + "/practica", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
        });

        alert((await response.json()).message);
        if (response.ok) {
            window.location.reload();
        }
    }

    document.getElementById("btnsubmit").addEventListener("click", sendData);
</script>
