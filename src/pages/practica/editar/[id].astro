---
import Layout from "../../../layouts/Layout.astro";
import Header from "@comp/Header.astro";
import Footer from "@comp/Footer.astro";
import FormElement from "@comp/FormElement.astro";
import FormElementSelect from "@comp/FormElementSelect.astro";
import BackBtn from "@comp/BackBtn.astro";
import prisma from "@db/index.js";
import Cursos from "@comp/Cursos.astro";
import Empresas from "@comp/Empresas.astro";
import TipoPractica from "@comp/TipoPractica.astro";

const { id } = Astro.params;

if (!Number(id)) {
    console.log("Id no válido");
    return Astro.redirect("/404");
}

const practica = await prisma.practica.findUnique({
    where: {
        id_practica: Number(id),
    },
    include: {
        alumno: true,
        empresa: true,
        curso: true,
        profesor: true,
    },
});

if (!practica) {
    console.log("No hay registro con ese valor");
    return Astro.redirect("/404");
}

/* id_practica, fecha_inicio, fecha_fin, tipo_practica*, estado*, comentarios, fecha_creacion*, fecha_actualizacion, fk id_alumno, fk id_profesor, fk id_empresa, fk id_curso */
---

<Layout title="Modificación de la práctica" kind={1}>
    <Header />
    <main class="flex justify-center items-center grid-flow-col gap-10">
        <form
            class="bg-gray-300 rounded-lg shadow-md w-fit py-10 px-8 flex flex-col"
            id={practica.id_practica.toString()}
        >
            <fieldset class="grid grid-cols-2 grid-rows gap-2 py-5 px-4">
                <legend
                    class="px-1.5 bg-[#476683] rounded-md text-white text-center text-2xl font-semibold"
                >
                    Modificación de la práctica
                </legend>
                <div>
                    <h2 class="text-xl font-semibold mb-2">Alumno</h2>
                    <p class="text-gray-700">
                        <a
                            href={`/alumno/${practica.id_alumno}`}
                            class="text-blue-700 hover:text-blue-500 hover:underline"
                        >
                            {practica.alumno.nombre}
                            {practica.alumno.apellidos}
                        </a>
                    </p>
                </div>
                <Empresas
                    classes="flex flex-col p-2 gap-1.5 bg-gray-400 rounded-lg shadow-md drop-shadow-md"
                    checked={practica.empresa.nombre}
                />
                <div>
                    <h2 class="text-xl font-semibold mb-2">Profesor</h2>
                    <p class="text-gray-700">
                        {practica.profesor.nombre}
                        {practica.profesor.apellidos}
                    </p>
                </div>
                <Cursos
                    classes="flex flex-col p-2 gap-1.5 bg-gray-400 rounded-lg shadow-md drop-shadow-md"
                    checked={practica.curso.anio_academico}
                />
                <FormElementSelect checked={practica.estado} isrequired />
                <TipoPractica checked={practica.tipo_practica} />
                <FormElement
                    texto="fecha_inicio"
                    value={practica.fecha_inicio?.toISOString().slice(0, 10)}
                    type="date"
                />
                <FormElement
                    texto="fecha_fin"
                    value={practica.fecha_fin?.toISOString().slice(0, 10)}
                    type="date"
                />
                <FormElement
                    texto="comentarios"
                    placehold={practica.comentarios as string}
                    value={practica.comentarios as string}
                    classes="col-span-2 w-full"
                />
                <hr class="border-black border-solid col-span-2" />
                <div>
                    <h2 class="text-xl font-semibold mb-2">
                        Fecha de Creación
                    </h2>
                    <p class="text-gray-700">
                        {
                            new Date(practica.fecha_creacion)
                                .toLocaleDateString("es-ES")
                                .replace(",", "")
                        }
                    </p>
                </div>
                <div>
                    <h2 class="text-xl font-semibold mb-2">
                        Fecha de Actualización
                    </h2>
                    <p class="text-gray-700">
                        {
                            new Date(practica.fecha_actualizacion as Date)
                                .toLocaleDateString("es-ES")
                                .replace(",", "")
                        }
                    </p>
                </div>
            </fieldset>
            <div class="text-center">
                <button
                    type="submit"
                    id="btnsubmit"
                    class="bg-blue-700 hover:bg-blue-800 text-white rounded-lg text-sm px-2 py-2 transition-colors mx-auto"
                    >Modificar práctica</button
                >
                <BackBtn title="Los cambios no se guardaran" />
            </div>
        </form>
    </main>
    <Footer />
</Layout>

<script is:inline type="module">
    import { apiurl, data } from "/utils.js";
    const form = document.querySelector("form");
    const cursos = document.querySelector("#cursos");
    const empresas = document.querySelector("#empresas");

    form.addEventListener("submit", async (e) => {
        // Peticion para modificar el practica
        // Posibilidad de verificar si ha habido algun cambio
        e.preventDefault();

        let id_profesor = localStorage.getItem("id_profesor");

        if (!id_profesor) {
            alert("No has iniciado sesión");
            return;
        }

        if (!form.checkValidity()) {
            alert("Faltan campos por rellenar");
            return;
        }

        data = {
            ...data,
            id_practica: parseInt(form.id),
            fecha_inicio: form.fecha_inicio.value,
            fecha_fin: form.fecha_fin.value,
            estado: form.estado.value,
            comentarios: form.comentarios.value,
            id_curso: parseInt(
                cursos.querySelector(`option[value="${form.id_curso.value}"]`)
                    .textContent,
            ),
            id_empresa: parseInt(
                empresas.querySelector(
                    `option[value="${form.id_empresa.value}"]`,
                ).textContent,
            ),
            id_profesor,
        };

        Object.keys(data).forEach((key) => {
            if (data[key] == "") data[key] = null;
        });

        await fetch(apiurl + "/practica", {
            method: "PATCH",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
        })
            .then((response) => response.json())
            .then((json) => {
                alert(json.message);
                window.location.reload();
            });
    });
</script>
