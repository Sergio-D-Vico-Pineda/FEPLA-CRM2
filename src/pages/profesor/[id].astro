---
import Layout from "@lay/Layout.astro";
import Header from "@comp/Header.astro";
import Footer from "@comp/Footer.astro";
import BackBtn from "@comp/BackBtn.astro";
import prisma from "@db/index.js";
import Popup from "@comp/Popup.astro";

const { id } = Astro.params;

if (!Number(id)) {
    console.log("Id no válido")
    return new Response(null, {
        status: 404,
    });
}

const profesor = await prisma.profesor.findUnique({
    include: {
        usuario: true,
    },
    where: {
        id_profesor: Number(id),
    },
});

if (!profesor) {
    return new Response(null, {
        status: 404,
    });
}
---

<Layout title="Información del profesor" kind={1}>
    <Header />
    <main class="grid place-content-center">
        <span class="hidden" id="id_profesor">{profesor.id_profesor}</span>
        <div
            class="p-4 bg-slate-300 rounded-lg shadow-lg w-fit border-2 border-black"
        >
            {
                profesor.usuario?.activo ? (
                    <h2
                        class="text-3xl font-semibold mb-4 text-center text-green-500"
                        title="Profesor activo"
                    >
                        Ficha del profesor
                    </h2>
                ) : (
                    <h2
                        class="text-3xl font-semibold mb-4 text-center text-red-500"
                        title="Profesor inactivo"
                    >
                        Ficha del profesor
                    </h2>
                )
            }

            <hr class="border-black border-solid border-2 mx-4" />
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6 p-6">
                <div>
                    <h2 class="text-lg font-semibold mb-2">Nombre</h2>
                    <p class="text-gray-700">{profesor.nombre}</p>
                </div>
                <div>
                    <h2 class="text-lg font-semibold mb-2">Apellidos</h2>
                    {
                        profesor.apellidos ? (
                            <p class="text-gray-700">{profesor.apellidos}</p>
                        ) : (
                            <p class="text-gray-700 italic">Sin apellidos</p>
                        )
                    }
                </div>
                <div>
                    <h2 class="text-lg font-semibold mb-2">Usuario</h2>
                    <p id="perfil" class="text-gray-700">
                        {profesor.usuario?.usuario}
                    </p>
                </div>
                <div>
                    <h2 class="text-lg font-semibold mb-2">Teléfono</h2>
                    {
                        profesor.telefono ? (
                            <p class="text-gray-700">+34 {profesor.telefono}</p>
                        ) : (
                            <p class="text-gray-700 italic">Sin telefono</p>
                        )
                    }
                </div>
                <div>
                    <h2 class="text-lg font-semibold mb-2">Email</h2>
                    <p class="text-gray-700">{profesor.usuario?.email}</p>
                </div>
                <div>
                    <h2 class="text-lg font-semibold mb-2">NIF</h2>
                    {
                        profesor.nif ? (
                            <p class="text-gray-700">{profesor.nif}</p>
                        ) : (
                            <p class="text-gray-700 italic">Sin NIF</p>
                        )
                    }
                </div>
                <div>
                    <h2 class="text-lg font-semibold mb-2">NIP</h2>
                    {
                        profesor.nip ? (
                            <p class="text-gray-700">{profesor.nip}</p>
                        ) : (
                            <p class="text-gray-700 italic">Sin NIP</p>
                        )
                    }
                </div>
                {
                    profesor.comentarios && (
                        <div>
                            <h2 class="text-lg font-semibold mb-2">
                                Comentarios
                            </h2>
                            <p class="text-gray-700">{profesor.comentarios}</p>
                        </div>
                    )
                }
                <div>
                    <h2 class="text-lg font-semibold mb-2">
                        Fecha de creación
                    </h2>
                    <time class="text-gray-700">
                        {
                            new Date(profesor.fecha_creacion)
                                .toLocaleString("es-ES")
                                .replace(",", "")
                        }
                    </time>
                </div>
                {
                    profesor.fecha_actualizacion && (
                        <div>
                            <h2 class="text-lg font-semibold mb-2">
                                Fecha de actualización
                            </h2>
                            <time class="text-gray-700">
                                {new Date(profesor.fecha_actualizacion as Date)
                                    .toLocaleString("es-ES")
                                    .replace(",", "")}
                            </time>
                        </div>
                    )
                }
            </div>
            <div class="w-full flex justify-center gap-8">
                {
                    profesor.id_profesor != 0 &&
                        (profesor.usuario?.activo ? (
                            <button
                                id="btnDesactivar"
                                type="button"
                                class="bg-red-500 hover:bg-red-600 text-white rounded-lg px-3 py-1 transition-colors duration-300"
                            >
                                Desactivar
                            </button>
                        ) : (
                            <button
                                id="btnActivar"
                                type="button"
                                class="bg-green-500 hover:bg-green-600 text-white rounded-lg px-3 py-1 transition-colors duration-300"
                            >
                                Activar
                            </button>
                        ))
                }
                <BackBtn />
            </div>
            <Popup
                title="¿Está seguro de desactivar el profesor?"
                url=`/profesor/eliminar/${profesor.id_profesor}`
            />
        </div>
    </main>
</Layout>
<Footer />

<script is:inline type="module">
    import { apiurl, data } from "/utils.js";
    let btnDesactivar = document.querySelector("#btnDesactivar");
    let btnActivar = document.querySelector("#btnActivar");
    let popup = document.querySelector("#popup");
    let btnAceptar = document.querySelector("#btnconfirm");
    let id_prof = document.querySelector("#id_profesor");

    if (btnDesactivar) {
        btnDesactivar.addEventListener("click", () => {
            popup.style.display = "grid";
        });
    }

    data.id_profesor = parseInt(id_prof.textContent);

    const cambiarEstado = async (estado) => {
        data.activo = estado;
        const response = await fetch(apiurl + "/admin", {
            method: "PUT",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
        });
        alert((await response.json()).message);
        if (response.ok) {
            window.location.reload();
        }
    };

    if (btnDesactivar) {
        btnDesactivar.addEventListener("click", () => {
            popup.style.display = "grid";
        });
        btnAceptar.addEventListener("click", () => {
            popup.style.display = "none";
            cambiarEstado(false);
        });
    }

    if (btnActivar) {
        btnActivar.addEventListener("click", () => {
            cambiarEstado(true);
        });
    }
</script>
