generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Instituto {
  id_instituto          Int                  @id @default(autoincrement())
  nombre                String               @unique
  descripcion           String?
  direccion             String?
  sitio_web             String?
  telefono              String?
  comentarios           String?
  fecha_creacion        DateTime             @default(now())
  fecha_actualizacion   DateTime?            @updatedAt
  grupos                Grupo[]
  profesores_institutos Profesor_Instituto[]
}

model Grupo {
  id_grupo            Int           @id @default(autoincrement())
  nombre              String
  descripcion         String?
  comentarios         String?
  fecha_creacion      DateTime      @default(now())
  fecha_actualizacion DateTime?     @updatedAt
  instituto           Instituto     @relation(fields: [id_instituto], references: [id_instituto])
  id_instituto        Int
  inscripciones       Inscripcion[]

  @@unique([id_instituto, nombre])
}

model Curso {
  id_curso       Int                  @id @default(autoincrement())
  anio_academico String
  inscripciones  Inscripcion[]
  profesores     Profesor_Instituto[]
  practicas      Practica[]
}

model Alumno {
  id_alumno           Int           @id @default(autoincrement())
  nombre              String        @unique
  apellidos           String?
  telefono            String?
  direccion           String?
  fecha_nacimiento    DateTime?
  email               String?       @unique
  nif                 String?       @unique
  nia                 String?
  nuss                String?
  comentarios         String?
  activo              Boolean       @default(true)
  fecha_creacion      DateTime      @default(now())
  fecha_actualizacion DateTime?     @updatedAt
  inscripciones       Inscripcion[]
  practicas           Practica[]
}

model Inscripcion {
  id_inscripcion      Int       @id @default(autoincrement())
  fecha_inscripcion   DateTime  @default(now())
  fecha_actualizacion DateTime? @updatedAt
  alumno              Alumno    @relation(fields: [id_alumno], references: [id_alumno])
  id_alumno           Int
  grupo               Grupo     @relation(fields: [id_grupo], references: [id_grupo])
  id_grupo            Int
  curso               Curso     @relation(fields: [id_curso], references: [id_curso])
  id_curso            Int
}

model Profesor {
  id_profesor         Int                  @id @default(autoincrement())
  nombre              String               @unique
  apellidos           String?
  telefono            String?
  nif                 String?              @unique
  nip                 String?
  comentarios         String?
  fecha_creacion      DateTime             @default(now())
  fecha_actualizacion DateTime?            @updatedAt
  institutos          Profesor_Instituto[]
  practicas           Practica[]
  registros           Registro[]
  usuario             Usuario?
}

model Profesor_Instituto {
  id_profesor_instituto Int       @id @default(autoincrement())
  fecha_creacion        DateTime  @default(now())
  fecha_actualizacion   DateTime? @updatedAt
  profesor              Profesor  @relation(fields: [id_profesor], references: [id_profesor])
  id_profesor           Int
  instituto             Instituto @relation(fields: [id_instituto], references: [id_instituto])
  id_instituto          Int
  curso                 Curso     @relation(fields: [id_curso], references: [id_curso])
  id_curso              Int

  @@unique([id_profesor, id_curso])
}

model Usuario {
  id_usuario  Int      @id @default(autoincrement())
  usuario     String
  email       String
  contrasena  String
  rol         String   @default("Prof") // Prof | Admin
  activo      Boolean  @default(true)
  profesor    Profesor @relation(fields: [id_profesor], references: [id_profesor])
  id_profesor Int      @unique

  @@unique([usuario, email])
}

model Empresa {
  id_empresa          Int                @id @default(autoincrement())
  nombre              String             @unique
  nombre_empresarial  String?
  direccion           String?
  cif                 String?            @unique
  sitio_web           String?
  sector              String?
  tecnologias         String?
  comentarios         String?
  activo              Boolean            @default(true)
  fecha_creacion      DateTime           @default(now())
  fecha_actualizacion DateTime?          @updatedAt
  practicas           Practica[]
  contactos           Contacto_Empresa[]
  interacciones       Interaccion[]
}

model Practica {
  id_practica         Int       @id @default(autoincrement())
  fecha_inicio        DateTime?
  fecha_fin           DateTime?
  tipo_practica       String    @default("Normal") // Normal | Extraordinaria
  estado              String    @default("Pendiente") // Pendiente | En_curso | Finalizada | Cancelada
  comentarios         String?
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime? @updatedAt
  alumno              Alumno    @relation(fields: [id_alumno], references: [id_alumno])
  id_alumno           Int
  profesor            Profesor  @relation(fields: [id_profesor], references: [id_profesor])
  id_profesor         Int
  empresa             Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa          Int
  curso               Curso     @relation(fields: [id_curso], references: [id_curso])
  id_curso            Int

  @@unique([id_alumno, id_curso])
}

model Contacto {
  id_contacto         Int                @id @default(autoincrement())
  nombre              String
  apellidos           String?
  telefono            String?
  email               String?
  comentarios         String?
  fecha_creacion      DateTime           @default(now())
  fecha_actualizacion DateTime?          @updatedAt
  empresas            Contacto_Empresa[]
  interacciones       Interaccion[]

  @@unique([nombre, email])
}

model Contacto_Empresa {
  id_contacto_empresa Int       @id @default(autoincrement())
  puesto              String?
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime? @updatedAt
  contacto            Contacto  @relation(fields: [id_contacto], references: [id_contacto])
  id_contacto         Int
  empresa             Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa          Int

  @@unique([id_contacto, id_empresa])
}

model Interaccion {
  id_interaccion      Int       @id @default(autoincrement())
  descripcion         String?
  tipo                String?
  estado              String    @default("Pendiente") // Pendiente | Cancelada | Finalizada
  comentarios         String?
  fecha_interaccion   DateTime?
  fecha_creacion      DateTime  @default(now())
  fecha_actualizacion DateTime? @updatedAt
  empresa             Empresa   @relation(fields: [id_empresa], references: [id_empresa])
  id_empresa          Int
  contacto            Contacto? @relation(fields: [id_contacto], references: [id_contacto])
  id_contacto         Int?
}

model Registro {
  id_registro  Int      @id @default(autoincrement())
  entidad      String
  id_entidad   Int
  descripcion  String
  fecha_accion DateTime @default(now())
  profesor     Profesor @relation(fields: [id_profesor], references: [id_profesor])
  id_profesor  Int
}
